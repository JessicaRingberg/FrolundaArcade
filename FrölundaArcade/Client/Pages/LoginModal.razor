@using System.ComponentModel.DataAnnotations
@using FrölundaArcade.Client.Helpers
@using System.Net.Http.Json
@using System.Net
@inject HttpClient _http
@inject IDialogService DialogService

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
<DataAnnotationsValidator/>
    <MudItem xs="12">
        <MudCard Class="pa-18 mud-height-full">
            <MudCardContent>
                <MudTextField Label="Email" @bind-Value="model.Email" For="@(() => model.Email)"></MudTextField>
            </MudCardContent>
            <MudCardContent>
                <MudTextField Label="Lösenord" InputType="InputType.Password" @bind-Value="model.Password" For="@(() => model.Password)"></MudTextField>
            </MudCardContent>
            <MudToggleIconButton @bind-Toggled="@model.RememberMe"
                     Icon="@Icons.Outlined.RememberMe" Color="@Color.Error" Title="Off"
                     ToggledIcon="@Icons.Filled.RememberMe" ToggledColor="@Color.Success" ToggledTitle="On"/>
            <span>Håll mig inloggad: @(model.RememberMe ? "Ja" : "Nej")</span>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Logga in</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
</EditForm>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    UserLogin model = new UserLogin();

    private async Task OnValidSubmit()
    {
        var responseMessage = await _http.PostAsJsonAsync(Constants.Login(), model);
        HttpStatusCode statusCode = responseMessage.StatusCode;
        MudDialog.Close(statusCode);
    }
}
